[{"content":"Problem 93. Restore IP Addresses\nMy attempt(s) Code Python\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 class Solution(object): def restoreIpAddresses(self, s): if (len(s)\u0026lt;4) or (len(s)\u0026gt;12): return [] else: output=[] def get_output(list_temp): def judge(string_temp): if ((string_temp[0]==\u0026#34;0\u0026#34;) and(len(string_temp)\u0026gt;1)) or (int(string_temp)\u0026gt;255): return False else: return True for item in list_temp: cnt=0 s1=s[cnt: cnt+int(str(item)[0])] if !judge(s1): continue cnt+=int(str(item)[0]) s2=s[cnt: cnt+int(str(item)[1])] if !judge(s2): continue cnt+=int(str(item)[1]) s3=s[cnt: cnt+int(str(item)[2])] if !judge(s3): continue cnt+=int(str(item)[2]) s4=s[cnt:cnt+int(str(item)[3])] if !judge(s4): continue ss= s1+\u0026#34;.\u0026#34;+s2+\u0026#34;.\u0026#34;+s3+\u0026#34;.\u0026#34;+s4 if ss in output: continue else: output.append(ss) return output if (len(s)-4==0): return [s[0]+\u0026#34;.\u0026#34;+s[1]+\u0026#34;.\u0026#34;+s[2]+\u0026#34;.\u0026#34;+s[3]] elif (len(s)-4==1): return get_output([2111,1211,1121,1112]) elif (len(s)-4==2): return get_output([1122,1212,1221,2112,2121,2211,3111,1311,1131,1113]) elif (len(s)-4==3): return get_output([2221,2212,2122,1222,3211,3121,3112,2311,2131,2113,1321,1312,1231,1213,1132,1123]) elif (len(s)-4==4): return get_output([2222,3221,3212,3122,2321,2312,2231,2213,2132,2123,1322,1232,1223,3311,3131,3113,1331,1313,1133]) elif (len(s)-4==5): return get_output([3222,2322,2232,2223,3321,3312,3231,3213,3132,3123,2331,2313,2133,1332,1323,1233]) elif (len(s)-4==6): # list_t=[3322,3232,3223,2332,2323,2233,3331,3313,3133,1333] print(6) return get_output([3322,3232,3223,2332,2323,2233,3331,3313,3133,1333]) elif (len(s)-4==7): # list_t=[3332,3323,3233,2333] print(7) return get_output([3332,3323,3233,2333]) elif (len(s)-4==8): # list_t=[3333] print(8) return get_output([3333]) Explanation of idea A silly but ok fast and easy understand method\nGood solution ref. Code Analysis","date":"2022-06-29T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-93/","title":"Leet - 93"},{"content":"Problem 657. Robot Return to Origin\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 class Solution { public: bool judgeCircle(string moves) { if ((count(moves.begin(), moves.end(), \u0026#39;U\u0026#39;)==count(moves.begin(), moves.end(), \u0026#39;D\u0026#39;)) and (count(moves.begin(), moves.end(), \u0026#39;L\u0026#39;)==count(moves.begin(), moves.end(), \u0026#39;R\u0026#39;))) return true; else return false; } }; Python\n1 2 3 4 5 6 class Solution(object): def judgeCircle(self, moves): if ((moves.count(\u0026#34;U\u0026#34;)==moves.count(\u0026#34;D\u0026#34;))\u0026amp;(moves.count(\u0026#34;L\u0026#34;)==moves.count(\u0026#34;R\u0026#34;))): return True else: return False Explanation of idea For the robot to return to the origin (0,0), every steps the robot takes need to be compensated by a step in the opposite direction. Therefore just need to check whether the steps are \u0026ldquo;balanced\u0026rdquo;.\nGood solution ref. Code Analysis","date":"2022-06-28T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-657/","title":"Leet - 657"},{"content":"This article records some notes about Swift \u0026amp; SwiftUI.\nUnorganized Structure 1 View -\u0026gt; Viewmodifiers -\u0026gt; Viewmodifiers -\u0026gt; … @State Creates pointer in memory, not necessarily making variable mutable\nForEach The target should contain identifiable “unique” items (String normally considered as not identifiable, since two string might look the same but are used to identify different stuff)\nTo force foreach to think each the element are identifiable\n1 id: \\.self Symbols \u0026amp; Icons Download SF symbols Sample usage:\n1 image(systemName: \u0026#34;ICON_NAME\u0026#34;) Factoring out bricks a. New VIEW struct b. Var some view\nGrid LazyVGrid (Makes as small as possible to fit more) Other stacks (Use up all available spaces)\nOther To take all open space available that no one want\n1 spacer() Aspect ratio\n1 aspectRatio(1/3, contentMode:.fit) ","date":"2022-06-21T00:00:00Z","image":"https://felix-ku.github.io/p/swift-notes/cover_hu94d8b7f20a00de9330176d37b5922ba5_360205_120x120_fill_q75_box_smart1.jpg","permalink":"https://felix-ku.github.io/p/swift-notes/","title":"Swift Notes"},{"content":"Problem 860. Lemonade Change\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class Solution { public: bool lemonadeChange(vector\u0026lt;int\u0026gt;\u0026amp; bills) { int bills5=0; int bills10=0; for (int i=0; i\u0026lt;bills.size(); i++){ if (bills[i]==5) bills5++; else if (bills[i]==10){ if (bills5\u0026lt;0) return false; else bills5--; bills10++; } else{ if ((bills10\u0026gt;0) \u0026amp;\u0026amp; (bills5\u0026gt;=1)){ bills10--; bills5--; } else if (bills5\u0026gt;=3) bills5=bills5-3; else return false; } } return true; } }; Explanation of idea Good solution ref. Code Analysis","date":"2022-03-10T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-860/","title":"Leet - 860"},{"content":"Problem 735. Asteroid Collision\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 class Solution { public: vector\u0026lt;int\u0026gt; asteroidCollision(vector\u0026lt;int\u0026gt;\u0026amp; asteroids) { for (int i=0; i\u0026lt;asteroids.size(); i++){ if (asteroids[i]\u0026lt;0){ for (int j=i-1; j\u0026gt;-1; j--){ if (asteroids[j]\u0026gt;0){ if ((asteroids[i]*-1)\u0026gt;asteroids[j]) asteroids[j]=0; else if ((asteroids[i]*-1)\u0026lt;asteroids[j]){ asteroids[i]=0; break; } else{ asteroids[i]=0; asteroids[j]=0; break; } } } } } asteroids.erase(remove(asteroids.begin(), asteroids.end(), 0), asteroids.end()); return(asteroids); } }; Explanation of idea Good solution ref. Code Analysis","date":"2022-01-21T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-735/","title":"Leet - 735"},{"content":"Problem 58. Length of Last Word\nMy attempt(s) Code Python\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Solution(object): def lengthOfLastWord(self, s): cnt=0 leng=len(s) if s==\u0026#34; \u0026#34;: return 0 else: while leng\u0026gt;0: if (s[leng-1]==\u0026#34; \u0026#34; and cnt==0): leng-=1 else: if s[leng-1]==\u0026#34; \u0026#34;: break else: cnt+=1 leng-=1 return cnt \u0026#34;\u0026#34;\u0026#34; :type s: str :rtype: int \u0026#34;\u0026#34;\u0026#34; Explanation of idea Good solution ref. Code Analysis","date":"2021-10-21T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-58/","title":"Leet - 58"},{"content":"Problem 50. Pow(x, n)\nMy attempt(s) Code C++\n1 2 3 4 5 6 class Solution { public: double myPow(double x, int n) { return pow(x,n); } }; Java\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public double myPow(double x, int n) { double cnt=x; boolean nrev=true; if (n\u0026lt;0){ nrev=false; n*=-1; } else if (n==0) return 1.00000; else if (x==1) return 1.00000; for (int i=1; i\u0026lt;n; i++) cnt=cnt*x; if (nrev) return cnt; else return 1/cnt; } } Explanation of idea C++ version: lol Java version: Not funtionable solution\nGood solution ref. Code Analysis","date":"2021-07-02T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-50/","title":"Leet - 50"},{"content":"Problem 45. Jump Game II\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class Solution { public: int jump(vector\u0026lt;int\u0026gt;\u0026amp; nums) { int i=0; int cnt=0; int max=0; int tmp=-1; if (nums.size()==1) return 0; if (nums[i]+i\u0026gt;=nums.size()-1) return 1; while (i\u0026lt;nums.size()-1){ max=0; //cout\u0026lt;\u0026lt;\u0026#34;i\u0026#34;\u0026lt;\u0026lt;i\u0026lt;\u0026lt;endl; for (int j=i+1; j\u0026lt;=i+nums[i];j++){ //cout\u0026lt;\u0026lt;\u0026#34;j\u0026#34;\u0026lt;\u0026lt;j\u0026lt;\u0026lt;endl; if (j==nums.size()-1){ cnt++; return cnt; } if ((j+nums[j])\u0026gt;max){ max=nums[j]+j; //cout\u0026lt;\u0026lt;\u0026#34;max\u0026#34;\u0026lt;\u0026lt;max\u0026lt;\u0026lt;endl; tmp=j; } } i=tmp; cnt++; //cout\u0026lt;\u0026lt;\u0026#34;cnt\u0026#34;\u0026lt;\u0026lt;cnt\u0026lt;\u0026lt;endl; } return cnt; } }; Explanation of idea Good solution ref. Code Analysis","date":"2021-05-08T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-45/","title":"Leet - 45"},{"content":"Problem 13. Roman to Integer\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 class Solution { public: int romanToDigit(char s){ switch(s) { case \u0026#39;I\u0026#39;: return 1; break; case \u0026#39;V\u0026#39;: return 5; break; case \u0026#39;X\u0026#39;: return 10; break; case \u0026#39;L\u0026#39;: return 50; break; case \u0026#39;C\u0026#39;: return 100; break; case \u0026#39;D\u0026#39;: return 500; break; case \u0026#39;M\u0026#39;: return 1000; break; } return 0; } int romanToInt(string s) { int store=0; int last=0; int temp=0; for (int i=0;i\u0026lt;s.length();i++) { temp=romanToDigit(s[i]); store=store+temp; if (temp\u0026gt;last) store=store-2*last; last=temp; } return store; } }; Explanation of idea Good solution ref. Code Analysis","date":"2021-04-30T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-13/","title":"Leet - 13"},{"content":"Problem 12. Integer to Roman\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public: string intToRoman(int num) { string output=\u0026#34;\u0026#34;; int value[13] = {1000,900,500,400,100,90,50,40,10,9,5,4,1}; string valueS[13] = {\u0026#34;M\u0026#34;,\u0026#34;CM\u0026#34;,\u0026#34;D\u0026#34;,\u0026#34;CD\u0026#34;,\u0026#34;C\u0026#34;,\u0026#34;XC\u0026#34;,\u0026#34;L\u0026#34;,\u0026#34;XL\u0026#34;,\u0026#34;X\u0026#34;,\u0026#34;IX\u0026#34;,\u0026#34;V\u0026#34;,\u0026#34;IV\u0026#34;,\u0026#34;I\u0026#34;}; int count=num; int pos=0; while (count!=0) { if (count\u0026gt;=value[pos]) { count=count-value[pos]; output=output+valueS[pos]; } else pos++; } return output; } }; Java\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 class Solution { public String intToRoman(int num) { String result=\u0026#34;\u0026#34;; while (num\u0026gt;0){ if (num\u0026gt;=1000){ result+=\u0026#34;M\u0026#34;; num-=1000; } else if (num\u0026gt;=900){ result+=\u0026#34;CM\u0026#34;; num-=900; } else if (num\u0026gt;=500){ result+=\u0026#34;D\u0026#34;; num-=500; } else if (num\u0026gt;=400){ result+=\u0026#34;CD\u0026#34;; num-=400; } else if (num\u0026gt;=100){ result+=\u0026#34;C\u0026#34;; num-=100; } else if (num\u0026gt;=90){ result+=\u0026#34;XC\u0026#34;; num-=90; } else if (num\u0026gt;=50){ result+=\u0026#34;L\u0026#34;; num-=50; } else if (num\u0026gt;=40){ result+=\u0026#34;XL\u0026#34;; num-=40; } else if (num\u0026gt;=10){ result+=\u0026#34;X\u0026#34;; num-=10; } else if (num\u0026gt;=9){ result+=\u0026#34;IX\u0026#34;; num-=9; } else if (num\u0026gt;=8){ result+=\u0026#34;VIII\u0026#34;; num-=8; } else if (num\u0026gt;=7){ result+=\u0026#34;VII\u0026#34;; num-=7; } else if (num\u0026gt;=6){ result+=\u0026#34;VI\u0026#34;; num-=6; } else if (num\u0026gt;=5){ result+=\u0026#34;V\u0026#34;; num-=5; } else if (num\u0026gt;=4){ result+=\u0026#34;IV\u0026#34;; num-=4; } else if (num\u0026gt;=3){ result+=\u0026#34;III\u0026#34;; num-=3; } else if (num\u0026gt;=2){ result+=\u0026#34;II\u0026#34;; num-=2; } else if (num\u0026gt;=1){ result+=\u0026#34;I\u0026#34;; num-=1; } } return result; } } Explanation of idea Good solution ref. Code Analysis","date":"2021-03-07T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-12/","title":"Leet - 12"},{"content":"Problem 11. Container With Most Water\nMy attempt(s) Code Java\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Solution { public int maxArea(int[] height) { int ans = 0; int temp = 0; for (int i = 0; i \u0026lt; height.length; i++){ for (int j = height.length-1; j \u0026gt; i; j--){ if (height[j]\u0026gt;=height[i]){ temp = height[i]*(j-i); if (temp\u0026gt;ans) ans = temp; break; } } } for (int i = height.length-1; i \u0026gt; -1; i--){ for (int j = 0; j \u0026lt; i; j++){ if (height[j]\u0026gt;=height[i]){ temp = height[i]*(i-j); if (temp\u0026gt;ans) ans = temp; break; } } } return ans; } } Java\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Solution { public int maxArea(int[] height) { int i=0; int j=height.length-1; int ans=0; while(i!=j){ int area=(j-i)*Math.min(height[i],height[j]); if(area\u0026gt;ans){ ans=area; } if(height[i]\u0026gt;height[j]){ j--; }else{ i++; } } return ans; } } Explanation of idea Good solution ref. Code Analysis","date":"2021-01-31T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-11/","title":"Leet - 11"},{"content":"Problem 9. Palindrome Number\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public: bool isPalindrome(int x) { if (x\u0026lt;0) return false; long reversex=0; int originx=x; while (x!=0) { reversex=reversex*10+x%10; x=x/10; } cout\u0026lt;\u0026lt;reversex; if (originx==reversex) return true; else return false; } }; Explanation of idea Good solution ref. Code Analysis","date":"2021-01-17T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-9/","title":"Leet - 9"},{"content":"Problem 7. Reverse Integer\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 class Solution { public: int reverse(int x) { string s = to_string(x); string temp=\u0026#34;\u0026#34;; for (int i=s.length()-1;i\u0026gt;=0;i--) { temp=temp+s[i]; } if (x\u0026lt;0) { try { x=stoi(temp); } catch (std::out_of_range\u0026amp;) { return 0; } x=x*-1; } else { try { x=stoi(temp); } catch (std::out_of_range\u0026amp;) { return 0; } } return x; } }; Explanation of idea Good solution ref. Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { public: int reverse(int x) { int rev = 0; while (x != 0) { int pop = x % 10; x /= 10; if (rev \u0026gt; INT_MAX/10 || (rev == INT_MAX / 10 \u0026amp;\u0026amp; pop \u0026gt; 7)) return 0; if (rev \u0026lt; INT_MIN/10 || (rev == INT_MIN / 10 \u0026amp;\u0026amp; pop \u0026lt; -8)) return 0; rev = rev * 10 + pop; } return rev; } }; Analysis","date":"2020-12-23T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-7/","title":"Leet - 7"},{"content":"Problem 6. Zigzag Conversion\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 class Solution { public: string convert(string s, int numRows) { int cnt = (numRows - 1) * 2; int cntt = 1; int cnttt = 0; int times = 0; int timess = 0; bool last = false; std::string ss = \u0026#34;\u0026#34;; if (numRows==1) return s; while (ss.length() != s.length()) { while (cntt \u0026lt;= s.length()) { if (cntt == numRows) last = true; if (!((last) and (timess\u0026gt;0))) ss = std::string(ss) + s[cntt - 1]; if ((cnttt != 0) and (cntt + cnttt \u0026lt;= s.length()) and ((times!=0) or (last))) { ss = std::string(ss) + s[cntt + cnttt-1]; cntt = cntt; } else if ((cntt + cnttt \u0026gt; s.length()) and (last)) { break; } if ((times != 0) or (last)) { timess = timess + 1; cntt = cntt + cnttt; } times = times + 1; cntt = cntt + cnt; if (ss.length() == s.length()) break; } cntt = cntt - times * cnt - timess * cnttt + 1; times = 0; timess = 0; cnt = cnt - 2; cnttt = cnttt + 2; } return ss; } }; Explanation of idea Good solution ref. Code Analysis","date":"2020-10-27T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-6/","title":"Leet - 6"},{"content":"Problem 3. Longest Substring Without Repeating Characters\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 class Solution { public: int lengthOfLongestSubstring(string s) { if (s==\u0026#34;\u0026#34;) return 0; int head=0; int LongestSize=1; int CurrentSize=1; bool breaked=0; for (int i=0;i\u0026lt;s.length();i++) { breaked=0; CurrentSize=1; for (int j=head;j\u0026lt;i;j++) { if (s[j]==s[i]) { head=j+1; breaked=1; } if ((s[j]!=s[i])\u0026amp;\u0026amp;(breaked==0)) CurrentSize=CurrentSize+1; } if (CurrentSize\u0026gt;LongestSize) LongestSize=CurrentSize; } return LongestSize; } }; C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class Solution { public: int lengthOfLongestSubstring(string s) { if (s==\u0026#34;\u0026#34;) return 0; int head=0; int LongestSize=1; int CurrentSize=1; bool breaked=0; for (int i=0;i\u0026lt;s.length();i++) { breaked=0; CurrentSize=1; for (int j=head;j\u0026lt;i;j++) { if (s[j]==s[i]) { head=j+1; breaked=1; break; } if ((s[j]!=s[i])\u0026amp;\u0026amp;(breaked==0)) CurrentSize=CurrentSize+1; } if (CurrentSize\u0026gt;LongestSize) LongestSize=CurrentSize; } return LongestSize; } }; Explanation of idea Good solution ref. Code Analysis","date":"2020-10-14T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-3/","title":"Leet - 3"},{"content":"Problem 2. Add Two Numbers\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 class Solution { public: ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) { ListNode *temp1 = l1; ListNode *temp2 = l2; ListNode *l3 = new ListNode; ListNode *temp = l3; while(temp1!=NULL) { temp-\u0026gt;val=temp1-\u0026gt;val; temp1=temp1-\u0026gt;next; if (temp1!=NULL) temp-\u0026gt;next = new ListNode; temp=temp-\u0026gt;next; } temp1 = l1; temp = l3; while(temp2!=NULL) { if (temp1!=NULL) temp-\u0026gt;val=temp-\u0026gt;val+temp2-\u0026gt;val; else temp-\u0026gt;val=temp-\u0026gt;val+temp2-\u0026gt;val; temp2=temp2-\u0026gt;next; if(temp1!=NULL) if(temp1-\u0026gt;next!=NULL) temp1=temp1-\u0026gt;next; else temp1=NULL; if (temp2!=NULL \u0026amp;\u0026amp; temp-\u0026gt;next==NULL) temp-\u0026gt;next = new ListNode; temp=temp-\u0026gt;next; } temp=l3; while(temp!=NULL) { if (temp-\u0026gt;val\u0026gt;9) { temp-\u0026gt;val=temp-\u0026gt;val%10; if (temp-\u0026gt;next!=NULL) temp-\u0026gt;next-\u0026gt;val+=1; else temp-\u0026gt;next=new ListNode(1); } temp=temp-\u0026gt;next; } return l3; } }; C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 class Solution { public: ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) { ListNode *temp1 = l1; ListNode *temp2 = l2; ListNode *l3 = new ListNode; ListNode *temp = l3; while(temp1!=NULL) { temp-\u0026gt;val=temp1-\u0026gt;val; temp1=temp1-\u0026gt;next; if (temp1!=NULL) temp-\u0026gt;next = new ListNode; temp=temp-\u0026gt;next; } temp1 = l1; temp = l3; while(temp2!=NULL) { if (temp1!=NULL) temp-\u0026gt;val=temp-\u0026gt;val+temp2-\u0026gt;val; else temp-\u0026gt;val=temp-\u0026gt;val+temp2-\u0026gt;val; temp2=temp2-\u0026gt;next; if(temp1!=NULL) if(temp1-\u0026gt;next!=NULL) temp1=temp1-\u0026gt;next; else temp1=NULL; if (temp2!=NULL \u0026amp;\u0026amp; temp-\u0026gt;next==NULL) temp-\u0026gt;next = new ListNode; temp=temp-\u0026gt;next; } temp=l3; while(temp!=NULL) { if (temp-\u0026gt;val\u0026gt;9) { temp-\u0026gt;val=temp-\u0026gt;val%10; if (temp-\u0026gt;next!=NULL) temp-\u0026gt;next-\u0026gt;val+=1; else temp-\u0026gt;next=new ListNode(1); } temp=temp-\u0026gt;next; } return l3; } }; Explanation of idea Good solution ref. Code Analysis","date":"2020-09-17T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-2/","title":"Leet - 2"},{"content":"Problem 1.Two Sum\nMy attempt(s) Code C++\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class Solution { public: vector\u0026lt;int\u0026gt; twoSum(vector\u0026lt;int\u0026gt;\u0026amp; nums, int target) { vector\u0026lt;int\u0026gt; answer(2,0); bool found=false; for (int i=0; i\u0026lt;nums.size()-1;i++){ for (int j=i+1; j\u0026lt;nums.size();j++){ if (nums[i]+nums[j]==target){ answer[0]=i; answer[1]=j; found=true; break; } if (found) break; } if (found) break; } return answer; } }; Java\n1 2 3 4 5 6 7 8 9 class Solution { public int[] twoSum(int[] nums, int target) { for (int i=0; i\u0026lt;nums.length-1; i++) for (int j=i+1; j\u0026lt;nums.length; j++) if (nums[i]+nums[j]==target) return new int[] {i,j}; return new int[] {0,0}; } } Python\n1 2 3 4 5 6 7 8 class Solution(object): def twoSum(self, nums, target): for i in range(0,len(nums)-1,1): for j in range (i+1,len(nums),1): if nums[i]+nums[j]==target: return [i,j] return [] Explanation of idea Good solution ref. Code Analysis","date":"2020-09-13T00:00:00Z","permalink":"https://felix-ku.github.io/p/leet-1/","title":"Leet - 1"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating. — Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image YouTube Privacy Enhanced Shortcode Twitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode bilibilibi Shortcode Gist Shortcode Gitlab Snippets Shortcode Quote Shortcode Stack adds a quote shortcode. For example:\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Anonymous book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Some book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Somebody The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2020-08-09T00:00:00Z","image":"https://felix-ku.github.io/p/md-post-guide-collection/20160708_093951491_iOS_hu9057c09d0fa4615d4e22db790c71d140_2234474_120x120_fill_q75_box_smart1.jpg","permalink":"https://felix-ku.github.io/p/md-post-guide-collection/","title":"MD post guide collection"}]