<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>learning on Stellaris</title>
        <link>https://felix-ku.github.io/categories/learning/</link>
        <description>Recent content in learning on Stellaris</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 10 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://felix-ku.github.io/categories/learning/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Notes on Cloud (GCloud)</title>
        <link>https://felix-ku.github.io/p/notes-on-cloud-gcloud/</link>
        <pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>https://felix-ku.github.io/p/notes-on-cloud-gcloud/</guid>
        <description>&lt;p&gt;Some past notes on learning GCloud&lt;/p&gt;
&lt;h2 id=&#34;cloud-in-business&#34;&gt;Cloud in business &lt;/h2&gt;
&lt;h2 id=&#34;core-concepts&#34;&gt;Core concepts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Why? &lt;/li&gt;
&lt;li&gt;3 rules 
&lt;ul&gt;
&lt;li&gt;Focusing on user &lt;/li&gt;
&lt;li&gt;10x thinking &lt;/li&gt;
&lt;li&gt;Empowered to innovate &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example 
&lt;ul&gt;
&lt;li&gt;Cold call insurance company employee 
&lt;ul&gt;
&lt;li&gt;Why? 
&lt;ul&gt;
&lt;li&gt;Enable people to live their lives feeling financially secure and optimally prepared for lie&amp;rsquo;s inherent ups and downs &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3 rules 
&lt;ul&gt;
&lt;li&gt;Focusing on user 
&lt;ul&gt;
&lt;li&gt;Discovering user&amp;rsquo;s real needs and intent &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;10x thinking &lt;/li&gt;
&lt;li&gt;Empowered to innovate &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;concepts-for-companies&#34;&gt;Concepts for companies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Your organization&amp;rsquo;s mission &lt;/li&gt;
&lt;li&gt;Who is your user &lt;/li&gt;
&lt;li&gt;What are some ways you&amp;rsquo;re focusing on their expectations and meeting those expectations in your day-to-day activities &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;other-considerations&#34;&gt;Other considerations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Security 
&lt;ul&gt;
&lt;li&gt;How&amp;rsquo;s been collected &lt;/li&gt;
&lt;li&gt;How&amp;rsquo;s been stored &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Privacy &lt;/li&gt;
&lt;li&gt;Compliance &lt;/li&gt;
&lt;li&gt;Ethics &lt;/li&gt;
&lt;li&gt;Human bias 
&lt;ul&gt;
&lt;li&gt;Important to incorporate strategy to eliminate unconcious biases &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;
&lt;h3 id=&#34;data-sets&#34;&gt;Data sets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;User data &lt;/li&gt;
&lt;li&gt;Corporate data &lt;/li&gt;
&lt;li&gt;Industry data &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;data-types&#34;&gt;Data types&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Structured data &lt;/li&gt;
&lt;li&gt;Unstructured data 
&lt;ul&gt;
&lt;li&gt;Unorganized &lt;/li&gt;
&lt;li&gt;Qualitatives &lt;/li&gt;
&lt;li&gt;Cannot fit into spreedsheets &lt;/li&gt;
&lt;li&gt;Examples 
&lt;ul&gt;
&lt;li&gt;Word processing documents &lt;/li&gt;
&lt;li&gt;Audio files &lt;/li&gt;
&lt;li&gt;Images &lt;/li&gt;
&lt;li&gt;Videos &lt;/li&gt;
&lt;li&gt;BLOB &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Usage 
&lt;ul&gt;
&lt;li&gt;Cloud computing through API can structurlize unconstructure data 
&lt;ul&gt;
&lt;li&gt;Example 
&lt;ul&gt;
&lt;li&gt;Bloomberg uses Google Translate API to translate analysis reports from journelists all around the world into local language &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;data-consolidation-and-analytics&#34;&gt;Data Consolidation and Analytics &lt;/h2&gt;
&lt;h3 id=&#34;traditional-vs-cloud&#34;&gt;Traditional vs Cloud &lt;/h3&gt;
&lt;p&gt;Traditional (Storing in premises) &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Responsible for IT infrastucture &lt;/li&gt;
&lt;li&gt;Responsible for maintaining and expanding capacity &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;data-management&#34;&gt;Data management &lt;/h3&gt;
&lt;p&gt;Priorities: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data integrity 
&lt;ul&gt;
&lt;li&gt;Rollback integrity &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Data scale 
&lt;ul&gt;
&lt;li&gt;Scalibility 
 
Services &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cloud SQL &lt;/li&gt;
&lt;li&gt;Cloud spanner 
 
Cloud storage solutions: &lt;/li&gt;
&lt;li&gt;Databases 
&lt;ul&gt;
&lt;li&gt;Ingest large amounts of data from many different sources efficiently &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Data warehouse 
&lt;ul&gt;
&lt;li&gt;Enable rapid analysis of large and multidimensional datasets &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Data lakes 
&lt;ul&gt;
&lt;li&gt;Can store structured, semi-structured, and unstructured data 
 
Benefits: &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Any amount of data &lt;/li&gt;
&lt;li&gt;Low latencey &lt;/li&gt;
&lt;li&gt;Accessible from anywhere 
 
Storage types: &lt;/li&gt;
&lt;li&gt;Nearline storage 
&lt;ul&gt;
&lt;li&gt;Rarely access &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Coldline storage 
&lt;ul&gt;
&lt;li&gt;Once per few weeks &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Archive 
&lt;ul&gt;
&lt;li&gt;At least once a year &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;business-intelligence-solutions&#34;&gt;Business intelligence solutions &lt;/h2&gt;
&lt;p&gt;Challenge: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hard to identify the right business intelligence tools 
Services: &lt;/li&gt;
&lt;li&gt;Google Looker 
&lt;ul&gt;
&lt;li&gt;Makes it simple to describe your data and define business metrics &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;infrastructure-modernization&#34;&gt;Infrastructure modernization &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Infrastructure as service &lt;/li&gt;
&lt;li&gt;Outsourcing IT needs at infrastructure level &lt;/li&gt;
&lt;li&gt;Platform as service &lt;/li&gt;
&lt;li&gt;Don’t have to manage infrastructure and only pay for what you use 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;technology&#34;&gt;Technology &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Virtual machine 
&lt;ul&gt;
&lt;li&gt;Hypervisor (VMM) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Serverless computing &lt;/li&gt;
&lt;li&gt;Container &lt;/li&gt;
&lt;li&gt;Cloud types 
&lt;ul&gt;
&lt;li&gt;Private cloud &lt;/li&gt;
&lt;li&gt;Hybrid cloud &lt;/li&gt;
&lt;li&gt;Multi cloud &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bare Metal 
&lt;ul&gt;
&lt;li&gt;Bare Metal enables you to migrate specialized workloads to the cloud, while &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;maintaining your existing investments and architecture. This allows you access and integration with Google Cloud services with minimal latency. &lt;/li&gt;
&lt;li&gt;Google Kubernets Engine (GKE) 
&lt;ul&gt;
&lt;li&gt;Provides managed environment for deploying, managing, and scaling containerized applications &lt;/li&gt;
&lt;li&gt;Allows securely speed up app development streamline operations, and manage infrastructure &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Google app engine 
&lt;ul&gt;
&lt;li&gt;Cloud Run &lt;/li&gt;
&lt;li&gt;Cloud Functions 
&lt;ul&gt;
&lt;li&gt;Scalable, pay-as-you-go functions as service to run code with zero server management 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;five-patterns&#34;&gt;Five patterns &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Move applications first then change them &lt;/li&gt;
&lt;li&gt;Change applications first then move them &lt;/li&gt;
&lt;li&gt;Invent in greenfield &lt;/li&gt;
&lt;li&gt;Invent in brownfield 
&lt;ul&gt;
&lt;li&gt;Build new application (Cloud native) in cloud to replace legacy application &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Move applications without any changes &lt;/li&gt;
&lt;li&gt;Microservice Architecture 
&lt;ul&gt;
&lt;li&gt;Reduces problems by separating large application into small 
&lt;ul&gt;
&lt;li&gt;Helps to determine where code needs to be changed &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CI/CD 
&lt;ul&gt;
&lt;li&gt;Continuous intergration + Continuous deployment &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;api&#34;&gt;API&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://felix-ku.github.io/p/notes-on-cloud-gcloud/api.jpg&#34;
	width=&#34;1153&#34;
	height=&#34;586&#34;
	srcset=&#34;https://felix-ku.github.io/p/notes-on-cloud-gcloud/api_hu3b423f3e50d05673006957c7d4e5d0b9_84751_480x0_resize_q75_box.jpg 480w, https://felix-ku.github.io/p/notes-on-cloud-gcloud/api_hu3b423f3e50d05673006957c7d4e5d0b9_84751_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Google Cloud API&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;472px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;financial-governance&#34;&gt;Financial Governance &lt;/h2&gt;
&lt;p&gt;Three lens: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People 
&lt;ul&gt;
&lt;li&gt;Cooperate and manage costs &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Process &lt;/li&gt;
&lt;li&gt;Technology 
&lt;ul&gt;
&lt;li&gt;Google cloud 
&lt;ul&gt;
&lt;li&gt;Visibility 
&lt;ul&gt;
&lt;li&gt;Into predicted cloud costs 
&lt;ul&gt;
&lt;li&gt;Built-in reporting tools &lt;/li&gt;
&lt;li&gt;Custom dashboards &lt;/li&gt;
&lt;li&gt;Pricing calculator &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Accountability 
&lt;ul&gt;
&lt;li&gt;Define clear ownership for projects&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Control 
&lt;ul&gt;
&lt;li&gt;Set permissions in place to ensure only authorized individuals have power &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Intelligence 
&lt;ul&gt;
&lt;li&gt;Smart spending decisions &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Notes on Java</title>
        <link>https://felix-ku.github.io/p/notes-on-java/</link>
        <pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>https://felix-ku.github.io/p/notes-on-java/</guid>
        <description>&lt;p&gt;Some past notes on JAVA&lt;/p&gt;
&lt;h2 id=&#34;java-doc&#34;&gt;JAVA doc&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/** 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * @Title Method main 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * @Description This method handles the main process, demonstrates go() and initialize GUI. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * @Param args Unused. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * @Return Nothing. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * @update 2021-04-10      
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;multi-threading&#34;&gt;Multi-threading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Putting a Thread to Sleep
&lt;ul&gt;
&lt;li&gt;Can be used to make threas take turns&lt;/li&gt;
&lt;li&gt;sleep will force thread to leave running state and allow another thread to run&lt;/li&gt;
&lt;li&gt;Sleeping thread will always go back to runnable state after wake up&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;concurrency-problem&#34;&gt;Concurrency problem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;May occur when 2 or more threas have access to same object on the heap
&lt;ul&gt;
&lt;li&gt;race condition -&amp;gt; Possibly Data corruption&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;synchronization&#34;&gt;Synchronization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To solve concurrency problem
&lt;ul&gt;
&lt;li&gt;Making method &amp;ldquo;atomic&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Use keyword &amp;ldquo;synchronized&amp;rdquo; to modify a method so that only 1 thread at a time can access it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;synchronized&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;methodA&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;To protect data, synchronize the methods that act on that data&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;life-cycle-of-object&#34;&gt;Life cycle of object &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stack
&lt;ul&gt;
&lt;li&gt;Methods to be run &lt;/li&gt;
&lt;li&gt;LIFO &lt;/li&gt;
&lt;li&gt;Local Variable lives in Stack &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Heap 
&lt;ul&gt;
&lt;li&gt;All alive objects &lt;/li&gt;
&lt;li&gt;Objects live in Heap &lt;/li&gt;
&lt;li&gt;Instance Variable lives in Heap &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;alive-vs-in-scope&#34;&gt;Alive Vs. In scope &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Alive = Not destroyed &lt;/li&gt;
&lt;li&gt;In scope = Within current running method &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lifetime&#34;&gt;Lifetime: &lt;/h3&gt;
&lt;p&gt;Instance variable &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Live and die with object 
Object &lt;/li&gt;
&lt;li&gt;Alive when live references exist &lt;/li&gt;
&lt;li&gt;Destoryed when last live reference disappears &lt;/li&gt;
&lt;li&gt;Destroyed when containing method completed &amp;amp; out of stack &lt;/li&gt;
&lt;li&gt;Destroyed when Object = null; 
Reference variable &lt;/li&gt;
&lt;li&gt;Destroyed when Reference = null; &lt;/li&gt;
&lt;li&gt;Call to super() must be first statement in constructor &lt;/li&gt;
&lt;li&gt;A constructor can have either super() or this() &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gui&#34;&gt;GUI&lt;/h2&gt;
&lt;h3 id=&#34;frame-settings&#34;&gt;Frame settings&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;frame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setDefaultCloseOperation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JFrame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_ON_CLOSE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;frame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A Simple Card Game&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;event-handling&#34;&gt;Event-Handling&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ReplaceListener&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ActionListener&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;actionPerformed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ActionEvent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{}}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;btn_rpcard1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addActionListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ReplaceListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Listener for replace button
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;interface&#34;&gt;Interface&lt;/h2&gt;
&lt;h3 id=&#34;creation&#34;&gt;Creation&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Pet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;play&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Interface methods are implicityly public &amp;amp; abstract 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Dog&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Canine&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;modules&#34;&gt;Modules&lt;/h2&gt;
&lt;h3 id=&#34;gui-1&#34;&gt;GUI&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;javax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;swing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.*;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;awt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.*;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;awt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.*;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;arraylist&#34;&gt;Arraylist&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;util&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;serialize&#34;&gt;Serialize&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.*;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;networking&#34;&gt;Networking&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.*;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;net&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.*;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;exceptions-handling&#34;&gt;Exception(s) handling&lt;/h2&gt;
&lt;p&gt;Finally will always run even if try or catch has return() &lt;/p&gt;
&lt;h3 id=&#34;ducking-exception&#34;&gt;Ducking exception&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Repeats until some method in the calling chain has try{} catch{} handling &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;catching-multiple-exceptions&#34;&gt;Catching multiple exceptions&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ex1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception2&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ex2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception3&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ex3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception4&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ex4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;other-notes--concepts&#34;&gt;Other notes &amp;amp; Concepts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Superclass of sub class should have constructor defined &lt;/li&gt;
&lt;li&gt;Static variable = same value for all instance of same class 
 &lt;/li&gt;
&lt;li&gt;Defind constant = static final double… 
 &lt;/li&gt;
&lt;li&gt;super.roam() &amp;lt;- roam() in superclass is called 
 &lt;/li&gt;
&lt;li&gt;IS-A vs HAS-A 
 &lt;/li&gt;
&lt;li&gt;Abstract class -&amp;gt; To prevent a class from ever being instantiated  &lt;/li&gt;
&lt;li&gt;Abstract method -&amp;gt; Method has to be overridden (Class with abstract method must be abstract class) &lt;/li&gt;
&lt;li&gt;Abstract class can choose to implement (abstract) methods in any ways, but concrete class must implement all  
 &lt;/li&gt;
&lt;li&gt;Polymorphism -&amp;gt; To allow reference type as superclass of the actual new object type &lt;/li&gt;
&lt;li&gt;Override -&amp;gt; To have specialized operations for same method &lt;/li&gt;
&lt;li&gt;Overload -&amp;gt; To have methods of same name but different arguments 
 &lt;/li&gt;
&lt;li&gt;Final variable, method, class = uneditable, cannot override, cannot extend &lt;/li&gt;
&lt;li&gt;Objects O override &lt;/li&gt;
&lt;li&gt;Method X override &lt;/li&gt;
&lt;li&gt;Method O Polymorphism &lt;/li&gt;
&lt;li&gt;Variable X Polymorphism &lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Notes on UX design</title>
        <link>https://felix-ku.github.io/p/notes-on-ux-design/</link>
        <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>https://felix-ku.github.io/p/notes-on-ux-design/</guid>
        <description>&lt;p&gt;Some past notes from Google Professional course on UX design&lt;/p&gt;
&lt;h2 id=&#34;roles&#34;&gt;Roles &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Entry-level 
&lt;ul&gt;
&lt;li&gt;Research &lt;/li&gt;
&lt;li&gt;Wireframe &lt;/li&gt;
&lt;li&gt;Prototype &lt;/li&gt;
&lt;li&gt;Creating information architecture &lt;/li&gt;
&lt;li&gt;Communicating effectively &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interaction designer &lt;/li&gt;
&lt;li&gt;Visual designer &lt;/li&gt;
&lt;li&gt;Motion designer &lt;/li&gt;
&lt;li&gt;UX researcher &lt;/li&gt;
&lt;li&gt;UX writer &lt;/li&gt;
&lt;li&gt;UX program manager &lt;/li&gt;
&lt;li&gt;UX engineer &lt;/li&gt;
&lt;li&gt;Conversation designer 
 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;skill-types&#34;&gt;Skill types &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Specialists &lt;/li&gt;
&lt;li&gt;Generalist &lt;/li&gt;
&lt;li&gt;T-shaped 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;user-experience&#34;&gt;User experience &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How a person, the user, feels about interacting with or experiencing a product 
&lt;ul&gt;
&lt;li&gt;Usable 
&lt;ul&gt;
&lt;li&gt;Clear and easy to use &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Equitable 
&lt;ul&gt;
&lt;li&gt;Address needs of people with diverse abilities and background &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enjoyable 
&lt;ul&gt;
&lt;li&gt;Postive connections with users and inspire positive reaction from users &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Useful 
&lt;ul&gt;
&lt;li&gt;Solves user problems &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Business value 
&lt;ul&gt;
&lt;li&gt;Good experience leads to more users and recommendations 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;design-process&#34;&gt;Design process &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Understand &lt;/li&gt;
&lt;li&gt;Specify &lt;/li&gt;
&lt;li&gt;Design &lt;/li&gt;
&lt;li&gt;Evaluate 
 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;product-development-life-cycle&#34;&gt;Product development life cycle &lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://felix-ku.github.io/p/notes-on-ux-design/cycle.jpg&#34;
	width=&#34;587&#34;
	height=&#34;599&#34;
	srcset=&#34;https://felix-ku.github.io/p/notes-on-ux-design/cycle_hu4097f2c370f46d75f7dd1b31e68958df_64592_480x0_resize_q75_box.jpg 480w, https://felix-ku.github.io/p/notes-on-ux-design/cycle_hu4097f2c370f46d75f7dd1b31e68958df_64592_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Cycle&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;97&#34;
		data-flex-basis=&#34;235px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Brainstorm: 
&lt;ul&gt;
&lt;li&gt;Know the user problem want to solve and have ideas &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Define: 
&lt;ul&gt;
&lt;li&gt;Figure out specifications for the product &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Design: 
&lt;ul&gt;
&lt;li&gt;Wireframe prototypes &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Test 
&lt;ul&gt;
&lt;li&gt;Internal test &lt;/li&gt;
&lt;li&gt;Stakeholder test &lt;/li&gt;
&lt;li&gt;Potential user test &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Launch: 
&lt;ul&gt;
&lt;li&gt;Go live! 
 
 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;key-frameworks&#34;&gt;Key frameworks &lt;/h2&gt;
&lt;h3 id=&#34;five-elements-framework&#34;&gt;Five elements framework &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Turn idea into working product 
&lt;ul&gt;
&lt;li&gt;Strategy &lt;/li&gt;
&lt;li&gt;Scope 
&lt;ul&gt;
&lt;li&gt;Determine features &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Structure 
&lt;ul&gt;
&lt;li&gt;Figure out how to organize design and how users interacts &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Skeleton &lt;/li&gt;
&lt;li&gt;Surface 
&lt;ul&gt;
&lt;li&gt;Where users see &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://felix-ku.github.io/p/notes-on-ux-design/5frame.jpg&#34;
	width=&#34;809&#34;
	height=&#34;614&#34;
	srcset=&#34;https://felix-ku.github.io/p/notes-on-ux-design/5frame_hu2d7b701b811c01eaebe66150a4d68f2d_69227_480x0_resize_q75_box.jpg 480w, https://felix-ku.github.io/p/notes-on-ux-design/5frame_hu2d7b701b811c01eaebe66150a4d68f2d_69227_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;5 layers of framework&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;316px&#34;
	
&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;design-thinking-framework&#34;&gt;Design thinking framework &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create solutions that address problems  
&lt;ul&gt;
&lt;li&gt;Empathize 
&lt;ul&gt;
&lt;li&gt;Think and feel like users &lt;/li&gt;
&lt;li&gt;Through research, interviews… &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Define 
&lt;ul&gt;
&lt;li&gt;Problem statement &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ideate 
&lt;ul&gt;
&lt;li&gt;Come up ideas (Focus on quantity) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Prototype &lt;/li&gt;
&lt;li&gt;Test &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://felix-ku.github.io/p/notes-on-ux-design/dframe.jpg&#34;
	width=&#34;892&#34;
	height=&#34;267&#34;
	srcset=&#34;https://felix-ku.github.io/p/notes-on-ux-design/dframe_hu918e015462f770cfd1c6e771b7e2d3d8_43231_480x0_resize_q75_box.jpg 480w, https://felix-ku.github.io/p/notes-on-ux-design/dframe_hu918e015462f770cfd1c6e771b7e2d3d8_43231_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Design thinking framework&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;334&#34;
		data-flex-basis=&#34;801px&#34;
	
&gt;
 &lt;/p&gt;
&lt;h2 id=&#34;challenges&#34;&gt;Challenges &lt;/h2&gt;
&lt;h3 id=&#34;issues-of-users&#34;&gt;Issues of users &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Cost 
&lt;ul&gt;
&lt;li&gt;May not afford good device &lt;/li&gt;
&lt;li&gt;ram &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Connectivity 
&lt;ul&gt;
&lt;li&gt;Continuous access to internet &lt;/li&gt;
&lt;li&gt;Giving ability for user to load offline &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Digital literacy 
&lt;ul&gt;
&lt;li&gt;Clear guidance &lt;/li&gt;
&lt;li&gt;Video tutorials &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Literacy 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;accesibility&#34;&gt;Accesibility&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Major 4 types 
&lt;ul&gt;
&lt;li&gt;Cognitive &lt;/li&gt;
&lt;li&gt;Visual &lt;/li&gt;
&lt;li&gt;Motor &lt;/li&gt;
&lt;li&gt;deaf or hard of hearing &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Status 
&lt;ul&gt;
&lt;li&gt;Permanent &lt;/li&gt;
&lt;li&gt;Temporary &lt;/li&gt;
&lt;li&gt;Situational &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Equity focused design 
 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ux-design-tools&#34;&gt;UX design tools &lt;/h2&gt;
&lt;h3 id=&#34;wireframe-and-prototyping-tools&#34;&gt;Wireframe and prototyping tools &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Figma &lt;/li&gt;
&lt;li&gt;Adobe XD &lt;/li&gt;
&lt;li&gt;Sketch &lt;/li&gt;
&lt;li&gt;Framer 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;presentation-tools&#34;&gt;Presentation tools &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Google slides &lt;/li&gt;
&lt;li&gt;Powerpoint &lt;/li&gt;
&lt;li&gt;Keynote 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;image-creation-tools&#34;&gt;Image creation tools &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;illustrator &lt;/li&gt;
&lt;li&gt;Photoshop 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;animation-tools&#34;&gt;Animation tools &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Lottie &lt;/li&gt;
&lt;li&gt;Aftereffect 
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;research&#34;&gt;Research &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Usability test &lt;/li&gt;
&lt;li&gt;Interview &lt;/li&gt;
&lt;li&gt;Survey &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://felix-ku.github.io/p/notes-on-ux-design/user.jpg&#34;
	width=&#34;486&#34;
	height=&#34;486&#34;
	srcset=&#34;https://felix-ku.github.io/p/notes-on-ux-design/user_hu46ad5942dd93e61f7e725fd59a64ce52_64221_480x0_resize_q75_box.jpg 480w, https://felix-ku.github.io/p/notes-on-ux-design/user_hu46ad5942dd93e61f7e725fd59a64ce52_64221_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;More about Users&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;
 &lt;/p&gt;</description>
        </item>
        <item>
        <title>Swift Notes</title>
        <link>https://felix-ku.github.io/p/swift-notes/</link>
        <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
        
        <guid>https://felix-ku.github.io/p/swift-notes/</guid>
        <description>&lt;img src="https://felix-ku.github.io/p/swift-notes/cover.jpg" alt="Featured image of post Swift Notes" /&gt;&lt;p&gt;Some learning notes about UIKit, Swift, SwiftUI and Objective-C.&lt;/p&gt;
&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OOP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;project-structure&#34;&gt;Project Structure&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;View -&amp;gt; Viewmodifiers -&amp;gt; Viewmodifiers -&amp;gt; …
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;state--binding&#34;&gt;@State &amp;amp; @Binding&lt;/h2&gt;
&lt;h3 id=&#34;-symbol&#34;&gt;$ symbol&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Binding&lt;/li&gt;
&lt;li&gt;e.g. in actionSheet, using $variable allows actionSheet update its value instead of solely reading its value&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;state&#34;&gt;@State&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Creates pointer in memory, not necessarily making variable mutable&lt;/li&gt;
&lt;li&gt;Views that listen to the @State variable will auto change their presentations according to the variable&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;restaurantIsFavorites&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Bool&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;binding&#34;&gt;@Binding&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Require caller to pass in a $Variable
Normal usage&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Binding&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;isFavorite&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Bool&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;With Object&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Restaurant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Binding&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;restaurant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Restaurant&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;foreach&#34;&gt;ForEach&lt;/h2&gt;
&lt;p&gt;The target should contain identifiable “unique” items
(String normally considered as not identifiable, since two string might look the same but are used to identify different stuff)&lt;/p&gt;
&lt;p&gt;To force foreach to think each the element are identifiable&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;self&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;different-foreach-list-method&#34;&gt;Different ForEach list method&lt;/h3&gt;
&lt;p&gt;Assume there is a list:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;RestaurantList&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;From 0 to end of list&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ForEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RestaurantList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;For indices&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ForEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RestaurantList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;For all items in the list&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ForEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RestaurantList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Restaurants&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Normal number for each&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ForEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Restaurants&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Remark:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Swift uses three dots &amp;ldquo;&amp;hellip;&amp;rdquo; instead of &amp;ldquo;..&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;symbols--icons&#34;&gt;Symbols &amp;amp; Icons&lt;/h2&gt;
&lt;p&gt;Download SF symbols
Sample usage:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;systemName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ICON_NAME&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;factoring-out-bricks&#34;&gt;Factoring out bricks&lt;/h2&gt;
&lt;p&gt;a. New VIEW struct
b. Var some view&lt;/p&gt;
&lt;h2 id=&#34;grid&#34;&gt;Grid&lt;/h2&gt;
&lt;p&gt;LazyVGrid (Makes as small as possible to fit more)
Other stacks (Use up all available spaces)&lt;/p&gt;
&lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt;
&lt;p&gt;To take all open space available that no one want&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;spacer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Aspect ratio&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;aspectRatio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contentMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;classes-and-structures&#34;&gt;Classes and Structures&lt;/h2&gt;
&lt;p&gt;Class&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Plane&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;brand&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Airbus&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;plane1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Plane&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;plane2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plane&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plane1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;brand&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Boeing&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;bp&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plan2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;brand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Output -&amp;gt; Boeing&lt;/p&gt;
&lt;p&gt;Structure&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Plane&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;brand&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Airbus&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;plane1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Plane&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;plane2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plane&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plane1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;brand&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Boeing&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;bp&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plan2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;brand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Output -&amp;gt; Airbus&lt;/p&gt;
&lt;h2 id=&#34;new-struct&#34;&gt;New struct&lt;/h2&gt;
&lt;p&gt;Similar to what Java does&lt;/p&gt;
&lt;h3 id=&#34;1-create-new-struct-better-in-new-swift-file&#34;&gt;1. Create new struct (better in new Swift file)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;STRUCT_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// For passing value to initialize&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kc&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kc&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// For initialize with default values&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kc&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-initialize&#34;&gt;2. Initialize&lt;/h3&gt;
&lt;p&gt;In normal case&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Let&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;STRUE_VARIABLE_DEFAULT&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;STRUCT_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Let&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;STRUE_VARIABLE_A&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;STRUCT_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;If the struct needs to have $Variable, a list of it will be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;LIST_OF_STRUCT&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;STRUCT_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;STRUCT_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;comment&#34;&gt;Comment&lt;/h2&gt;
&lt;p&gt;Standard comment&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;To create sections in code&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Mark: - SECTION_NAME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Tips for Language Learning</title>
        <link>https://felix-ku.github.io/p/tips-for-language-learning/</link>
        <pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate>
        
        <guid>https://felix-ku.github.io/p/tips-for-language-learning/</guid>
        <description>&lt;h2 id=&#34;4-important-points&#34;&gt;4 Important points&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Points&lt;/th&gt;
&lt;th&gt;Actual actions&lt;/th&gt;
&lt;th&gt;Backing research/ideas&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Acquire language through context&lt;/td&gt;
&lt;td&gt;Understand words in context (TV drama, Movies, Anime)&lt;/td&gt;
&lt;td&gt;(Stephen Krashen - learning theory) Improvement in language ability is only dependent on acquisition and not learning (e.g. Getting a joke). Processing is done in subconscious level, and is a natural, intuitive and subconscious process.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Watch with Foreign language subtitle&lt;/td&gt;
&lt;td&gt;Massive pattern recognition device in head, when you understand the meaning, brain will deconstruct meaning and grammar of context&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Maximize input&lt;/td&gt;
&lt;td&gt;Continuous non-stop learning&lt;/td&gt;
&lt;td&gt;Two modes of thinking: 1. (Focus mode) Focus awareness to figure something out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Fill brain with as much foreign language context as possible&lt;/td&gt;
&lt;td&gt;2. (Diffuse mode) Subconscious turning pattern recognition to piece out meaning in relax mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Listen &amp;amp; Pronounce&lt;/td&gt;
&lt;td&gt;Shadowing (Mimic pronunciation and to hear natural language)&lt;/td&gt;
&lt;td&gt;(Yo Hamada - Shadowing) Shadowing is simply finding a clip of a native speaker speaking and mimicking everything about their speech - pacing, intonation, cadence, and most importantly of course&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Make sure learning experience is positive&lt;/td&gt;
&lt;td&gt;Do not forget to reward yourself for your hard-work!&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;recommended-reading-list&#34;&gt;Recommended reading list&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Principles and practice in second language acquisition (Stephen Krashen)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;source-video&#34;&gt;Source video&lt;/h2&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/J_EQDtpYSNM&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Product innovation insights</title>
        <link>https://felix-ku.github.io/p/product-innovation-insights/</link>
        <pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate>
        
        <guid>https://felix-ku.github.io/p/product-innovation-insights/</guid>
        <description>&lt;p&gt;Notes on Product innovation&lt;/p&gt;
&lt;h2 id=&#34;cross-function-teamwork&#34;&gt;Cross function teamwork&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Marketing&lt;/li&gt;
&lt;li&gt;Designer&lt;/li&gt;
&lt;li&gt;Engineer&lt;/li&gt;
&lt;li&gt;Quality control&lt;/li&gt;
&lt;li&gt;Procurement&lt;/li&gt;
&lt;li&gt;Supply chain&lt;/li&gt;
&lt;li&gt;Consumer care&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;product-design&#34;&gt;Product design&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Know your customers&lt;/li&gt;
&lt;li&gt;Product concepts vs business opportunities&lt;/li&gt;
&lt;li&gt;Validated value propositions
&lt;ol&gt;
&lt;li&gt;Market size&lt;/li&gt;
&lt;li&gt;Unique selling points&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;tools-to-discover-user-experience&#34;&gt;Tools to discover user experience&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;user profile
&lt;ul&gt;
&lt;li&gt;Cover as much as possible&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Experience map
&lt;ul&gt;
&lt;li&gt;Discover pains, gains, identify product and business opportunities&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Value proposition map
&lt;ul&gt;
&lt;li&gt;Value of product or service vs user needs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Two ways of innovation
&lt;ul&gt;
&lt;li&gt;Market push (Most case)
&lt;ul&gt;
&lt;li&gt;Observe market needs then come up with solutions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Technology push
&lt;ul&gt;
&lt;li&gt;Have technology first and do other way around to make it success&lt;/li&gt;
&lt;li&gt;Have to work on convincing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;converting-concepts-into-product-requirements&#34;&gt;Converting concepts into product requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Define product specifications&lt;/li&gt;
&lt;li&gt;Ensure all products specifications can be traced back to user needs&lt;/li&gt;
&lt;li&gt;Ensure completeness of product specs&lt;/li&gt;
&lt;li&gt;Avoid over spec&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tools&#34;&gt;Tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;V-Model
&lt;ul&gt;
&lt;li&gt;Verification and validation
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Systems_Engineering_Process_II.svg/599px-Systems_Engineering_Process_II.svg.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;V-Model By Clarus Concept of Operations&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Competitors analysis
&lt;ul&gt;
&lt;li&gt;Know their products inside out&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Critical to quality tree
&lt;ul&gt;
&lt;li&gt;Link consumer needs with product specification&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Need
&lt;ol&gt;
&lt;li&gt;Eg. I want a good coffee&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Drivers
&lt;ol&gt;
&lt;li&gt;E.g. Taste, Temperature, Cost&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;CTQs
&lt;ol&gt;
&lt;li&gt;E.g. not acidic, rich in flavour&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;product-development&#34;&gt;Product development&lt;/h2&gt;
&lt;h3 id=&#34;methods-of-user-research&#34;&gt;Methods of user research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;usability study
&lt;ul&gt;
&lt;li&gt;Easy to observe&lt;/li&gt;
&lt;li&gt;Fast&lt;/li&gt;
&lt;li&gt;But not for long term usage data collect&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Product in home use test
&lt;ul&gt;
&lt;li&gt;Reliable user experience data based on long term&lt;/li&gt;
&lt;li&gt;Help to identify potential quality issues&lt;/li&gt;
&lt;li&gt;But takes time with high cost&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Testing groups
&lt;ul&gt;
&lt;li&gt;Potential users&lt;/li&gt;
&lt;li&gt;Expert groups&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;post-market-surveillance&#34;&gt;Post market surveillance&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Timely monitor consumer feedback&lt;/li&gt;
&lt;li&gt;Collect market feedback
&lt;ul&gt;
&lt;li&gt;Ratings and reviews
&lt;ul&gt;
&lt;li&gt;User scores and reviews online&lt;/li&gt;
&lt;li&gt;Impact on purchasing intent&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Consumer research&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;user-research&#34;&gt;User research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Data being analysed for decision making purpose&lt;/li&gt;
&lt;li&gt;Important factors
&lt;ul&gt;
&lt;li&gt;Authentic&lt;/li&gt;
&lt;li&gt;Representativeness&lt;/li&gt;
&lt;li&gt;Reliability&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;methodology
&lt;ul&gt;
&lt;li&gt;Interview&lt;/li&gt;
&lt;li&gt;Focus group discussion&lt;/li&gt;
&lt;li&gt;Field observation&lt;/li&gt;
&lt;li&gt;Questionnaire&lt;/li&gt;
&lt;li&gt;Product testing&lt;/li&gt;
&lt;li&gt;Big data&lt;/li&gt;
&lt;li&gt;And more…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;key-to-successful-product-innovation&#34;&gt;Key to successful product innovation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Data based decision making&lt;/li&gt;
&lt;li&gt;Continuously collect feedback through user research and testing&lt;/li&gt;
&lt;li&gt;Define product requirements and specs accordingly to consumers&amp;rsquo; biggest needs&lt;/li&gt;
&lt;li&gt;Thorough understanding of market and needs&lt;/li&gt;
&lt;li&gt;Iterative design process for optimum product design&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
